// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PharmaDataBase;

#nullable disable

namespace PharmaDataBase.Migrations
{
    [DbContext(typeof(DrugDbContext))]
    [Migration("20250723184026_InitalCreate3")]
    partial class InitalCreate3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PharmaDataBase.Drug", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AdditionalManufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdditionalManufacturerCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdministrationRoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Agent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AtcCode1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AtcCode2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorizationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCountryAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyCountryEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DistributionArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoesageForm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomainAR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomainEN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrugCombinations_ScientificName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrugCombinations_StrengthUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrugCombinations_StrengthValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DrugType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalStatusAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LegalStatusEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PackageSize")
                        .HasColumnType("int");

                    b.Property<string>("PackageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Price")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductControl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductControlAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegisterYear")
                        .HasColumnType("int");

                    b.Property<string>("ScientificName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShelfLife")
                        .HasColumnType("int");

                    b.Property<int?>("Size")
                        .HasColumnType("int");

                    b.Property<string>("SizeUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StorageConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Strength")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrengthUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TradeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drugs");
                });

            modelBuilder.Entity("PharmaDataBase.DrugResponse", b =>
                {
                    b.Property<int>("CurrentPage")
                        .HasColumnType("int");

                    b.Property<int>("FirstRowOnPage")
                        .HasColumnType("int");

                    b.Property<int>("LastRowOnPage")
                        .HasColumnType("int");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<int>("PageSize")
                        .HasColumnType("int");

                    b.Property<int>("RowCount")
                        .HasColumnType("int");

                    b.HasKey("CurrentPage");

                    b.ToTable("DrugResponses");
                });
#pragma warning restore 612, 618
        }
    }
}
